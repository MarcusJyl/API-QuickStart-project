{"ast":null,"code":"const URL = \"http://localhost:8080/jpareststarter/api/info\";\n\nfunction handleHttpErrors(res) {\n  if (!res.ok) {\n    return Promise.reject({\n      status: res.status,\n      fullError: res.json()\n    });\n  }\n\n  return res.json();\n}\n\nfunction apiFacade() {\n  /* Insert utility-methods from a latter step (d) here (REMEMBER to uncomment in the returned object when you do)*/\n  const login = (user, password) => {\n    /*TODO*/\n  };\n\n  const fetchData = () => {\n    /*TODO */\n  };\n\n  const makeOptions = (method, addToken, body) => {\n    var opts = {\n      method: method,\n      headers: {\n        \"Content-type\": \"application/json\",\n        'Accept': 'application/json'\n      }\n    };\n\n    if (addToken && loggedIn()) {\n      opts.headers[\"x-access-token\"] = getToken();\n    }\n\n    if (body) {\n      opts.body = JSON.stringify(body);\n    }\n\n    return opts;\n  };\n\n  return {\n    makeOptions,\n    setToken,\n    //getToken,\n    //loggedIn,\n    //login,\n    //logout,\n    fetchData\n  };\n}\n\nconst facade = apiFacade();\nexport default facade;","map":{"version":3,"sources":["/Users/Marcus/CPHBUSINESS/3.semester/flow3week2/security_frontend/src/apiFacade.js"],"names":["URL","handleHttpErrors","res","ok","Promise","reject","status","fullError","json","apiFacade","login","user","password","fetchData","makeOptions","method","addToken","body","opts","headers","loggedIn","getToken","JSON","stringify","setToken","facade"],"mappings":"AAAA,MAAMA,GAAG,GAAG,+CAAZ;;AAEA,SAASC,gBAAT,CAA0BC,GAA1B,EAA+B;AAC9B,MAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,WAAOC,OAAO,CAACC,MAAR,CAAe;AAAEC,MAAAA,MAAM,EAAEJ,GAAG,CAACI,MAAd;AAAsBC,MAAAA,SAAS,EAAEL,GAAG,CAACM,IAAJ;AAAjC,KAAf,CAAP;AACD;;AACD,SAAON,GAAG,CAACM,IAAJ,EAAP;AACA;;AAED,SAASC,SAAT,GAAqB;AACpB;AAED,QAAMC,KAAK,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAAC;AAAW,GAA9C;;AACA,QAAMC,SAAS,GAAG,MAAM;AAAC;AAAY,GAArC;;AACA,QAAMC,WAAW,GAAE,CAACC,MAAD,EAAQC,QAAR,EAAiBC,IAAjB,KAAyB;AACzC,QAAIC,IAAI,GAAG;AACTH,MAAAA,MAAM,EAAEA,MADC;AAETI,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH;AAFA,KAAX;;AAOA,QAAIH,QAAQ,IAAII,QAAQ,EAAxB,EAA4B;AAC1BF,MAAAA,IAAI,CAACC,OAAL,CAAa,gBAAb,IAAiCE,QAAQ,EAAzC;AACD;;AACD,QAAIJ,IAAJ,EAAU;AACRC,MAAAA,IAAI,CAACD,IAAL,GAAYK,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAZ;AACD;;AACD,WAAOC,IAAP;AACD,GAfF;;AAgBC,SAAO;AACHJ,IAAAA,WADG;AAEHU,IAAAA,QAFG;AAGH;AACA;AACA;AACA;AACAX,IAAAA;AAPG,GAAP;AASA;;AACD,MAAMY,MAAM,GAAGhB,SAAS,EAAxB;AACA,eAAegB,MAAf","sourcesContent":["const URL = \"http://localhost:8080/jpareststarter/api/info\";\n \nfunction handleHttpErrors(res) {\n if (!res.ok) {\n   return Promise.reject({ status: res.status, fullError: res.json() })\n }\n return res.json();\n}\n \nfunction apiFacade() {\n /* Insert utility-methods from a latter step (d) here (REMEMBER to uncomment in the returned object when you do)*/\n \nconst login = (user, password) => {/*TODO*/  }\nconst fetchData = () => {/*TODO */  }\nconst makeOptions= (method,addToken,body) =>{\n   var opts = {\n     method: method,\n     headers: {\n       \"Content-type\": \"application/json\",\n       'Accept': 'application/json',\n     }\n   }\n   if (addToken && loggedIn()) {\n     opts.headers[\"x-access-token\"] = getToken();\n   }\n   if (body) {\n     opts.body = JSON.stringify(body);\n   }\n   return opts;\n }\n return {\n     makeOptions,\n     setToken,\n     //getToken,\n     //loggedIn,\n     //login,\n     //logout,\n     fetchData\n }\n}\nconst facade = apiFacade();\nexport default facade;\n"]},"metadata":{},"sourceType":"module"}